server.port=8082

# Database Configuration
spring.datasource.url=jdbc:mariadb://payment-db:3306/paymentdb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Application name
spring.application.name=payment-service

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.paymentService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.paymentService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.paymentService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.paymentService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.paymentService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.paymentService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.paymentService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.paymentService.eventConsumerBufferSize=10

# Resilience4j Retry Configuration
resilience4j.retry.instances.paymentService.maxAttempts=3
resilience4j.retry.instances.paymentService.waitDuration=2s
resilience4j.retry.instances.paymentService.enableExponentialBackoff=true
resilience4j.retry.instances.paymentService.exponentialBackoffMultiplier=2

# Resilience4j Rate Limiter Configuration
resilience4j.ratelimiter.instances.paymentService.limitForPeriod=10
resilience4j.ratelimiter.instances.paymentService.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.paymentService.timeoutDuration=0s

# Resilience4j Time Limiter Configuration
resilience4j.timelimiter.instances.paymentService.timeoutDuration=2s
resilience4j.timelimiter.instances.paymentService.cancelRunningFuture=true 