server.port=8084

# Database Configuration
spring.datasource.url=jdbc:mariadb://shipping-db:3306/shippingdb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=shipping-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Application name
spring.application.name=shipping-service

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.shippingService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.shippingService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.shippingService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.shippingService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.shippingService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.shippingService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.shippingService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.shippingService.eventConsumerBufferSize=10

# Resilience4j Retry Configuration
resilience4j.retry.instances.shippingService.maxAttempts=3
resilience4j.retry.instances.shippingService.waitDuration=2s
resilience4j.retry.instances.shippingService.enableExponentialBackoff=true
resilience4j.retry.instances.shippingService.exponentialBackoffMultiplier=2

# Resilience4j Rate Limiter Configuration
resilience4j.ratelimiter.instances.shippingService.limitForPeriod=10
resilience4j.ratelimiter.instances.shippingService.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.shippingService.timeoutDuration=0s

# Resilience4j Time Limiter Configuration
resilience4j.timelimiter.instances.shippingService.timeoutDuration=2s
resilience4j.timelimiter.instances.shippingService.cancelRunningFuture=true 