server.port=8080
spring.application.name=api-gateway

# Route Configuration
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=http://product-service:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[0].filters[0]=CircuitBreaker=product-service
spring.cloud.gateway.routes[0].filters[1]=name=CircuitBreaker,args.name=product-service,args.fallbackUri=forward:/fallback/products

spring.cloud.gateway.routes[1].id=payment-service
spring.cloud.gateway.routes[1].uri=http://payment-service:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/payments/**
spring.cloud.gateway.routes[1].filters[0]=CircuitBreaker=payment-service
spring.cloud.gateway.routes[1].filters[1]=name=CircuitBreaker,args.name=payment-service,args.fallbackUri=forward:/fallback/payments

spring.cloud.gateway.routes[2].id=inventory-service
spring.cloud.gateway.routes[2].uri=http://inventory-service:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/inventory/**
spring.cloud.gateway.routes[2].filters[0]=CircuitBreaker=inventory-service
spring.cloud.gateway.routes[2].filters[1]=name=CircuitBreaker,args.name=inventory-service,args.fallbackUri=forward:/fallback/inventory

spring.cloud.gateway.routes[3].id=shipping-service
spring.cloud.gateway.routes[3].uri=http://shipping-service:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/shipping/**
spring.cloud.gateway.routes[3].filters[0]=CircuitBreaker=shipping-service
spring.cloud.gateway.routes[3].filters[1]=name=CircuitBreaker,args.name=shipping-service,args.fallbackUri=forward:/fallback/shipping

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.product-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.product-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.product-service.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.product-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.product-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.product-service.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.product-service.failureRateThreshold=50

# Resilience4j Rate Limiter Configuration
resilience4j.ratelimiter.instances.default.limitForPeriod=100
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.default.timeoutDuration=0s

# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always 